# Constants
NUM_CHARITIES = 3

# Initialize charity names and totals
charity_names = []
charity_totals = [0] * NUM_CHARITIES

def setup_donation_system():
    global charity_names
    # Task 1 - Set up the donation system
    print("Task 1 - Set up the donation system")
    for i in range(NUM_CHARITIES):
        charity_name = input(f"Enter the name of Charity {i + 1}: ")
        charity_names.append(charity_name)

    print("\nCharities:")
    for i, name in enumerate(charity_names):
        print(f"{i + 1}. {name}")

def record_and_total_donation():
    # Task 2 - Record and total each donation
    print("\nTask 2 - Record and total each donation")
    while True:
        try:
            choice = int(input("\nEnter the charity choice (1, 2, 3) or -1 to show totals: "))
            if choice == -1:
                show_totals()
                break
            elif 1 <= choice <= NUM_CHARITIES:
                bill_amount = float(input("Enter the value of the customer's shopping bill: "))
                donation = 0.01 * bill_amount
                charity_totals[choice - 1] += donation
                print(f"Donation of ${donation:.2f} recorded for {charity_names[choice - 1]}")
            else:
                print("Invalid choice. Please enter 1, 2, 3, or -1.")
        except ValueError:
            print("Invalid input. Please enter a valid number.")

def show_totals():
    # Task 3 - Show the totals so far
    print("\nTask 3 - Show the totals so far")
    sorted_charities = sorted(range(NUM_CHARITIES), key=lambda k: charity_totals[k], reverse=True)

    for index in sorted_charities:
        print(f"{charity_names[index]} Total: ${charity_totals[index]:.2f}")

    grand_total = sum(charity_totals)
    print(f"\nGRAND TOTAL DONATED TO CHARITY: ${grand_total:.2f}")

if __name__ == "__main__":
    setup_donation_system()
    record_and_total_donation()
